on:
  push:
    branches:
      - github-actions # Workflow trigger on pushes to this branch

jobs:
  build-api:
    runs-on: ubuntu-latest

    steps:

    #Checkout the code from repository
    - name: Checkout the code
      uses: actions/checkout@v4

    #Login to Docker hub 
    #using docker/login-action
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }} 
        password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
    
    #Build and push the docker image to the docker hub 
    #using docker/build-push-action
    - name: Build and push to Docker hub
      uses: docker/build-push-action@v6
      with: 
        context: ./api
        push: true
        tags: ${{ vars.DOCKERHUB_USERNAME }}/github-actions-api:latest, ${{ vars.DOCKERHUB_USERNAME }}/github-actions-api:${{ github.run_number}}

  build-web:
    runs-on: ubuntu-latest

    steps:

    #Checkout the code from repository
    - name: Checkout the code
      uses: actions/checkout@v4

    #Login to Docker hub 
    #using docker/login-action
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }} 
        password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
    
    #Build and push the docker image to the docker hub 
    #using docker/build-push-action
    - name: Build and push to Docker hub
      uses: docker/build-push-action@v6
      with: 
        context: ./web
        push: true
        tags: ${{ vars.DOCKERHUB_USERNAME }}/github-actions-web:latest, ${{ vars.DOCKERHUB_USERNAME }}/github-actions-web:${{ github.run_number}}
  
  #Dummy Deployment stage
  deploy:
    runs-on: ubuntu-latest
    needs: [build-web, build-api]
    steps:
      - name: executing remote ssh commands using ssh keys
        run: |
            install -m 600 -D /dev/null ~/.ssh/id_rsa
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
        - name: connect and pull
          run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && docker compose pull && docker compose up -d && exit"
        - name: cleanup
          run: rm -rf ~/.ssh