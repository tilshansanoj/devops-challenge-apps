services:
  nginx-proxy:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "${PORT}:${PORT}" # Exposes Nginx on port 80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro # Mount custom Nginx configuration
    networks:
      - frontend
      - backend # Connect to both networks to route traffic

  web:
    image: tilshansanoj/devops-challenge-repo:web-latest
    ports:
      - "${WEB_PORT}:${WEB_PORT}"
    command: npm start
    environment:
      - PORT=${WEB_PORT}
      - API_HOST=${API_HOST}
    networks:
      - backend    

  api:
    image: tilshansanoj/devops-challenge-repo:api-latest
    ports:
      - "${API_PORT}:${API_PORT}"
    command: npm start
    environment:
      - PORT=${API_PORT}
      - DB=${API_DB}
    networks:
      - backend    

  db:
    image: postgres:15.1-alpine
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 50M
          pids: 1
        reservations:
          cpus: '0.25'
          memory: 20M
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: test_db
    ports:
      - 5432:5432
    networks:
      - backend    

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
