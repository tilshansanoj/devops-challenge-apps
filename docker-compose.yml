version: '3.8'
services:

  nginx-proxy:
    image: nginx:alpine
    ports:
      - 80:80  # Exposes Nginx on port 80
    networks:
      - frontend
      - backend # Connect to both networks to route traffic
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro # Mount custom Nginx configuration
    env_file:
      - .env
    depends_on:
      - web
      - api
   

  web:
    image: tilshansanoj/devops-challenge-repo:web-latest
    ports:
      - 8080:8080
    networks:
      - backend
    command: npm start
    environment:
      - PORT=8080
      - API_HOST=http://api:8081
    depends_on:
      - api    
    env_file:
      - .env
    


  api:
    image: tilshansanoj/devops-challenge-repo:api-latest
    deploy:
      replicas: 1
    ports:
      - 8081:8081
    networks:
      - backend   
    command: npm start
    environment:
      - PORT=8081:8081
      - DB=postgres://root:root@db:5432/root 
    depends_on:
      - db
    env_file:
      - .env

  db:
    image: postgres:15.1-alpine
    volumes:
      - /data/mount:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - 5432:5432
    networks:
      - backend
    env_file:
      - .env

networks:

  frontend:
    
  backend:
